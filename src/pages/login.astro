---
// login.astro - Página de inicio de sesión
---

<html lang="es">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Iniciar Sesión</title>
  <!-- Importamos Tailwind CSS -->
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
</head>
<body class="bg-gray-100 min-h-screen flex items-center justify-center">
  <div class="bg-white p-8 rounded-lg shadow-md w-full max-w-md">
    <h1 class="text-2xl font-bold text-gray-800 mb-6 text-center">Iniciar Sesión</h1>
    
    <form id="loginForm" class="space-y-4">
      <div>
        <label for="email" class="block text-sm font-medium text-gray-700 mb-1">Correo electrónico</label>
        <input type="email" id="email" name="email" required 
               class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500">
      </div>
      
      <div>
        <label for="password" class="block text-sm font-medium text-gray-700 mb-1">Contraseña</label>
        <input type="password" id="password" name="password" required 
               class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500">
      </div>
      
      <div class="flex items-center justify-between">
        <div class="flex items-center">
          <input id="remember-me" name="remember-me" type="checkbox" 
                 class="h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded">
          <label for="remember-me" class="ml-2 block text-sm text-gray-900">
            Recordarme
          </label>
        </div>
        
        <div class="text-sm">
          <a href="#" class="font-medium text-indigo-600 hover:text-indigo-500">
            ¿Olvidaste tu contraseña?
          </a>
        </div>
      </div>
      
      <div>
        <button type="submit" 
                class="w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
          Iniciar Sesión
        </button>
      </div>
      
      <div id="error-message" class="text-red-500 text-sm hidden mt-2"></div>
      <div id="success-message" class="text-green-500 text-sm hidden mt-2"></div>
    </form>
  </div>

  <script>
    // Importamos axios ya que está instalado en el proyecto
    import axios from 'axios';

    // Script para manejar el inicio de sesión
    document.addEventListener('DOMContentLoaded', () => {
      const loginForm = document.getElementById('loginForm');
      const errorMessageElement = document.getElementById('error-message');
      const successMessageElement = document.getElementById('success-message');
      
      // Verificando que los elementos existan
      if (!loginForm) {
        console.error('No se pudo encontrar el formulario de login');
        return;
      }

      if (!errorMessageElement) {
        console.error('No se pudo encontrar el elemento de mensaje de error');
        return;
      }

      if (!successMessageElement) {
        console.error('No se pudo encontrar el elemento de mensaje de éxito');
        return;
      }

      loginForm.addEventListener('submit', async (e) => {
        e.preventDefault();
        
        // Ocultar mensajes previos
        errorMessageElement.classList.add('hidden');
        successMessageElement.classList.add('hidden');
        
        // Obtener datos del formulario con tipado correcto
        const emailInput = document.getElementById('email') as HTMLInputElement;
        const passwordInput = document.getElementById('password') as HTMLInputElement;
        
        if (!emailInput || !passwordInput) {
          console.error('No se pudieron encontrar los campos del formulario');
          return;
        }
        
        const email = emailInput.value;
        const password = passwordInput.value;
        
        try {
          // Llamada a la API mediante Axios
          const response = await axios.post('http://127.0.0.1:8000/api/v1/auth/login', {
            email,
            password
          });
          
          // Manejar respuesta exitosa
          console.log('Login exitoso:', response.data);
          
          // Mostrar mensaje de éxito
          successMessageElement.textContent = '¡Inicio de sesión exitoso!';
          successMessageElement.classList.remove('hidden');
          
          // Guardar el token en localStorage
          if (response.data && response.data.token) {
              localStorage.setItem('authToken', response.data.token);
              localStorage.setItem('userId', response.data.user.id);
              
              // Llamar a la función para redirigir
              redirigirPostLogin();
              
              function redirigirPostLogin() {
                  const ubicacion = localStorage.getItem('ubicacionSeleccionada');
                  
                  if (!ubicacion) {
                      // Redirigir a la página de selección de ubicación
                      window.location.href = '/dashboard/seleccion-ubicacion';
                  } else {
                      // Redirigir al dashboard
                      window.location.href = '/dashboard';
                  }
              }
          }
        } catch (error: any) {
          // Manejar errores con tipado mejorado
          console.error('Error al iniciar sesión:', error);
          
          // Mostrar mensaje de error
          let mensajeError = 'Ha ocurrido un error al iniciar sesión.';
          
          if (error.response) {
            // Si el servidor respondió con un error
            if (error.response.data && error.response.data.message) {
              mensajeError = error.response.data.message;
            } else {
              mensajeError = `Error ${error.response.status}: ${error.response.statusText}`;
            }
          } else if (error.request) {
            // Si la solicitud se realizó pero no se recibió respuesta
            mensajeError = 'No se recibió respuesta del servidor. Verifica tu conexión.';
          } else if (error.message) {
            // Otros tipos de error
            mensajeError = error.message;
          }
          
          errorMessageElement.textContent = mensajeError;
          errorMessageElement.classList.remove('hidden');
        }
      });
    });
  </script>
</body>
</html>