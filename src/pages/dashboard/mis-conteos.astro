---
import Layout from '../../layouts/Layout.astro';
---

<Layout title="Mis Conteos - Carnaval de Oruro 2025" currentPage="mis-conteos">
  <main class="min-h-screen bg-gradient-to-br from-purple-600 via-red-500 to-yellow-500 p-4">
    <div class="container mx-auto px-4 py-8 max-w-4xl">
      <div class="bg-white rounded-3xl shadow-xl p-6">
        <header class="mb-8">
          <h1 class="text-2xl md:text-3xl font-bold text-gray-800 text-center">
            Mis Conteos
          </h1>
          <p class="text-gray-600 text-center text-sm mt-2">
            Carnaval de Oruro 2025
          </p>
        </header>

        <div id="loading" class="text-center py-8">
          <div class="inline-block animate-spin rounded-full h-8 w-8 border-b-2 border-purple-700"></div>
          <p class="mt-2 text-gray-600">Cargando tus conteos...</p>
        </div>

        <div id="error" class="hidden text-center py-8 text-red-500">
          Ocurrió un error al cargar tus conteos. Por favor, intenta nuevamente.
        </div>

        <div id="no-conteos" class="hidden text-center py-8">
          <p class="text-gray-600">Aún no has realizado ningún conteo.</p>
          <a href="/dashboard" class="mt-4 inline-block px-6 py-3 bg-purple-600 text-white rounded-xl hover:bg-purple-700 transition-colors">
            Ir al Dashboard
          </a>
        </div>

        <div id="conteos-list" class="space-y-6 hidden">
          <!-- Los conteos se cargarán aquí dinámicamente -->
        </div>
      </div>
    </div>
  </main>
</Layout>

<script>
 import axios from 'axios';

// Obtener elementos del DOM de manera segura
const loadingElement = document.getElementById('loading');
const errorElement = document.getElementById('error');
const noConteosElement = document.getElementById('no-conteos');
const conteosListElement = document.getElementById('conteos-list');

const userId = localStorage.getItem('userId');
const token = localStorage.getItem('authToken');

// Verificar si el usuario está autenticado
if (!userId || !token) {
  window.location.href = '/login';
}

// Configurar axios para incluir el token en las solicitudes
axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;

async function cargarConteos() {
  try {
    const response = await axios.get('https://carnaval.aulavirtualunior.com/api/v1/conteos');
    console.log('Conteos:', response.data.data);

    // Verificar si response.data.data es un array
    if (!Array.isArray(response.data.data)) {
      console.error('La respuesta no contiene un array en "data":', response.data);
      throw new Error('La respuesta del servidor no contiene un array.');
    }
    
    // Filtrar conteos por contador_id si es necesario
    const misConteos = response.data.data.filter((conteo: any) => conteo.contador_id.toString() === userId);
    console.log('Mis conteos:', misConteos);
    
    if (misConteos.length === 0) {
      if (loadingElement) loadingElement.classList.add('hidden');
      if (noConteosElement) noConteosElement.classList.remove('hidden');
      return;
    }

    // Generar HTML para cada conteo
    const conteosHTML = misConteos.map((conteo: any, index: number) => `
      <div class="bg-white rounded-2xl shadow-lg overflow-hidden border-t-4 ${index % 2 === 0 ? 'border-purple-500' : 'border-pink-500'}">
        <div class="p-5">
          <div class="flex justify-between items-start mb-4">
            <h2 class="text-xl font-bold text-gray-800">${conteo.fraternidad}</h2>
            <span class="px-3 py-1 bg-gray-100 text-gray-700 rounded-full text-sm font-medium">
              ${conteo.ubicacion || 'Sin ubicación'}
            </span>
          </div>
          
          <div class="grid grid-cols-2 gap-4 mb-6">
            <div class="bg-purple-50 p-3 rounded-xl">
              <p class="text-sm text-purple-700 font-medium">Integrantes</p>
              <p class="text-2xl font-bold text-purple-800">${conteo.cantidad_fraternidad || 0}</p>
            </div>
            <div class="bg-pink-50 p-3 rounded-xl">
              <p class="text-sm text-pink-700 font-medium">Bandas</p>
              <p class="text-2xl font-bold text-pink-800">${conteo.bandas ? conteo.bandas.length : 0}</p>
            </div>
          </div>
          
          ${conteo.bandas && conteo.bandas.length > 0 ? `
            <div class="mt-4">
              <h3 class="text-md font-semibold text-gray-700 mb-3">Bandas</h3>
              <div class="space-y-2">
                ${conteo.bandas.map((banda: any, bandaIndex: number) => `
                  <div class="flex items-center justify-between p-2 rounded-xl border ${
                    bandaIndex % 2 === 0 ? 'border-orange-400 bg-orange-50' : 'border-red-400 bg-red-50'
                  }">
                    <span class="font-medium text-gray-800 text-sm">${banda.nombre}</span>
                    <span class="px-2 py-1 rounded-lg ${
                      bandaIndex % 2 === 0 ? 'bg-orange-100 text-orange-700' : 'bg-red-100 text-red-700'
                    } text-xs font-semibold">
                      ${banda.cantidad_ || 0}
                    </span>
                  </div>
                `).join('')}
              </div>
            </div>
          ` : ''}
        </div>
      </div>
    `).join('');

    // Si el elemento existe, le asignamos el contenido
    if (conteosListElement) conteosListElement.innerHTML = conteosHTML;
    
    // Ocultar el loader y mostrar los conteos
    if (loadingElement) loadingElement.classList.add('hidden');
    if (conteosListElement) conteosListElement.classList.remove('hidden');
    
  } catch (error) {
    console.error('Error al cargar los conteos:', error);
    if (loadingElement) loadingElement.classList.add('hidden');
    if (errorElement) errorElement.classList.remove('hidden');
  }
}

// Cargar conteos al iniciar
cargarConteos();

</script>